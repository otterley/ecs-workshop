AWSTemplateFormatVersion: 2010-09-09
Description: Sample ECS task

Parameters:
  UserName:
    Description: User name
    Type: String
    AllowedPattern: "^ecs-workshop-user-[0-9]+$"
  Email:
    Description: Email address
    Type: String

Resources:
  MessageTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: Email
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  TaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ["sts:AssumeRole"]
            Principal:
              Service: ecs-tasks.amazonaws.com
      Policies:
        - PolicyName: AllowPublishEmail
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref MessageTopic
                Action:
                  - sns:Publish
        - PolicyName: AllowS3Get
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Join
                  - ""
                  - - "arn:aws:s3:::"
                    - Fn::ImportValue: ecsworkshop:S3Bucket
                    - "/*"
                Action:
                  - s3:GetObject

  MessageTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Name: SendMessage
          Image: !Join
            - ":"
            - - Fn::ImportValue: ecsworkshop:ImageRepositoryUrl
              - latest
          Cpu: 128
          Memory: 256
          MemoryReservation: 128
          Essential: true
          Environment:
            - Name: S3_BUCKET
              Value:
                Fn::ImportValue: ecsworkshop:S3Bucket
            - Name: S3_KEY
              Value: hello.txt
            - Name: SNS_TOPIC_ARN
              Value: !Ref MessageTopic
            - Name: AWS_REGION
              Value: !Sub "${AWS::Region}"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: "true"
              awslogs-region: !Sub "${AWS::Region}"
              awslogs-group: !Sub "sendMessage-${UserName}"
      TaskRoleArn: !GetAtt TaskRole.Arn
      Family: !Sub "${UserName}-SendMessage"

Outputs:
  MessageTaskDefinition:
    Description: Message task definition
    Value: !Ref MessageTaskDefinition
    Export:
      Name: !Sub "${UserName}:MessageTaskDefinition"
